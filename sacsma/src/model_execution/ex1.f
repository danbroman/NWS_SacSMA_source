cfan added for pgf90 7/3/01
C$PRAGMA C (ICPI1)
C MEMBER EX1
C  (from old member FCEX1)
C
      SUBROUTINE EX1(PL,CL,PX,RO,PE,COVER,ROC,SM,TA,WE,FI)
C                             LAST UPDATE: 06/21/95.15:09:19 BY $WC30EA
C
C.......................................
C     THIS IS THE EXECUTION SUBROUTINE FOR THE SACRAMENTO SOIL-MOISTURE
C        ACCOUNTING OPERATION.
C.......................................
C     SUBROUTINE INITIALLY WRITTEN BY. . .
C            ERIC ANDERSON - HRL     APRIL 1979     VERSION 1
C.......................................
      DIMENSION PL(1),CL(1),PX(1),RO(1),PE(1),COVER(1),ROC(1),SM(1)
      DIMENSION TA(1),WE(1),FI(1)
      DIMENSION EPDIST(24),DIST(24),NDAYS(12),CO(23),SNAME(2)
      REAL LZTWM,LZFSM,LZFPM,LZSK,LZPK,LZTWC,LZFSC,LZFPC,LZTWC1,
     1   LZFSC1,LZFPC1
      real UZTWC_1,UZFWC_1,LZTWC_1,LZFSC_1,LZFPC_1,ADIMC_1,fgco_1
      character*8 opernames, c_opername 
      integer ii,jj
C
C     COMMON BLOCKS.
      INCLUDE 'common/fdbug'
      INCLUDE 'common/ionum'
      INCLUDE 'common/fctime'
      INCLUDE 'common/fcary'
      INCLUDE 'common/fnopr'
      INCLUDE 'common/fsacpr'
      INCLUDE 'common/fprog'
      INCLUDE 'common/ffgctl'
      COMMON/OUTCTL/IOUTYP
      COMMON/WHERE/ISEG(2),IOPNUM,OPNAME(2)
      COMMON/FSMPM1/UZTWM,UZFWM,UZK,PCTIM,ADIMP,RIVA,ZPERC,REXP,LZTWM,
     1LZFSM,LZFPM,LZSK,LZPK,PFREE,SIDE,SAVED,PAREA
      COMMON/FSMCO1/UZTWC,UZFWC,LZTWC,LZFSC,LZFPC,ADIMC,FGCO(6),RSUM(7),
     1PPE,PSC,PTA,PWE
      COMMON/FSUMS1/SROT,SIMPVT,SRODT,SROST,SINTFT,SGWFP,SGWFS,SRECHT,
     1SETT,SE1,SE3,SE4,SE5
      COMMON/FSMPT1/IROC,IROCO,ISC,ISCO,IET,IETCO,LWE,NXCO,NXFCO
      COMMON/FCOSAC/NSCV,JHSAC(10),ZONEC(6,10),BFMULT(10),FGIX(10)
      common/sacco1/ opernames(10), UZTWC_1(10),UZFWC_1(10),LZTWC_1(10),
     1                LZFSC_1(10),LZFPC_1(10),ADIMC_1(10), fgco_1(10)

C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob90/ohd/ofs/src/fcst_sac/RCS/ex1.f,v $
     . $',                                                             '
     .$Id: ex1.f,v 1.5 2005/10/21 13:40:02 wkwock Exp $
     . $' /
C    ===================================================================
C
C
C     DATA STATEMENTS.
      DATA DIST/0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.02,0.05,0.10,0.16,
     10.20,0.18,0.14,0.09,0.05,0.01,0.0,0.0,0.0,0.0,0.0,0.0/
      DATA NDAYS/31,28,31,30,31,30,31,31,30,31,30,31/
      DATA SNAME/4HEX1 ,4H    /
C.......................................
C     CHECK TRACE LEVEL -- TRACE LEVEL FOR THIS SUBROUTINE=1.
C     CHECK TO SEE IF DEBUG OUTPUT IS NEEDED FOR THIS OPERATION.
      CALL FPRBUG(SNAME,1,1,IBUG)
C.......................................
C     VALUES OF CONTROL VARIABLES.
      IDT=PL(2)
      IET=PL(14)
      IF(IET.EQ.0) GO TO 111
      IETCO=PL(IET+3)
  111 ISC=PL(15)
      IF(ISC.EQ.0) GO TO 112
      ITSC=PL(ISC+3)
      NSC=24/ITSC
      LSCD=(LHR/ITSC)*ITSC
      ISCO=PL(ISC+4)
  112 IROC=PL(16)
      IF(IROC.EQ.0) GO TO 113
      ITROC=PL(IROC+3)
      NRC=24/ITROC
      IROCO=PL(IROC+4)
  113 ISM=PL(17)
      IF(ISM.EQ.0) GO TO 114
      ITSM=PL(ISM+3)
      NSM=24/ITSM
  114 NXCO=PL(23)
      ISUM=PL(18)
      IPRINT=PL(19)
      IF (IPRSAC.EQ.-1) IPRINT=0
      IF (IPRSAC.EQ.1) IPRINT=1
      IF (MAINUM.EQ.2) IPRINT=0
      IF (MAINUM.EQ.4) IPRINT=0
      IF (NOPROT.EQ.1) IPRINT=0
      IF (IOUTYP.EQ.2) IPRINT=0
      IPLPM=PL(20)
      IPLET=PL(21)
      NV=24/IDT
      PXC=PL(22)
      IFUT=0
      IF (IDA.GT.LDACPD) IFUT=1
      IF ((IDA.EQ.LDACPD).AND.(IHR.GT.(LHRCPD/IDT)*IDT)) IFUT=1
      IF (IFUT.EQ.1) PXC=1.0
      IF ((ISUM.GT.0).AND.(IFUT.EQ.1)) ISUM=ISUM+8
      IFRZE=PL(24)
      NC=NXCO+6
      IF (IFRZE.EQ.0) GO TO 103
      ITTA=PL(IFRZE+3)
      NTA=24/ITTA
      LTAD=(LHR/ITTA)*ITTA
      NXFCO=PL(IFRZE+6)
      LWE=PL(IFRZE+4)
      IF (LWE.EQ.0) GO TO 104
      ITWE=PL(IFRZE+LWE+2)
      NWE=24/ITWE
      LWED=(LHR/ITWE)*ITWE
  104 LFI=PL(IFRZE+5)
      IF (LFI.EQ.0) GO TO 109
      ITFI=PL(IFRZE+LFI+1)
      NFI=24/ITFI
  109 NC=NC+6+NXFCO
  103 LP=PL(25)
C.......................................
C     DEBUG OUTPUT - PRINT PL( ) AND CL( )
      IF (IBUG.EQ.0) GO TO 105
      WRITE (IODBUG,910) LP,NC
  910 FORMAT(1H0,29HCONTENTS OF PL AND CL ARRAYS.,5X,
     121HNUMBER OF VALUES--PL=,I3,2X,3HCL=,I2)
      WRITE (IODBUG,901) (PL(I),I=1,LP)
  901 FORMAT (1H0,15F8.3)
      WRITE (IODBUG,901) (CL(I),I=1,NC)
C.......................................
C     DEFINE DAILY ET-DISTRIBUTION FOR INTERNAL TIME
  105 J=PL(IPLPM+18)
      IF (J.GT.0) GO TO 106
C     UNIFORM DAILY ET DISTRIBUTION
      V=1.0/NV
      DO 107 I=1,NV
  107 EPDIST(I)=V
      GO TO 110
C     DIURNAL DAILY ET DISTRIBUTION
  106 DO 108 I=1,NV
      I2=I*IDT
      I1=(I-1)*IDT+1
      EPDIST(I)=0.0
      DO 108 J=I1,I2
      L=J+LOCAL
      IF (L.GT.24) L=L-24
      EPDIST(I)=EPDIST(I)+DIST(L)
  108 CONTINUE
C.......................................
C     PRINT HEADING FOR DETAILED OUTPUT
  110 IF (IBUG.EQ.1) IPRINT=1
      IF (IPRINT.EQ.0) GO TO 115
C     GET ACTUAL TIME FOR START OF EXECUTION PERIOD.
      CALL MDYH1 (IDA,IHR,MONTH,IDAY,IYEAR,IHOUR,NOUTZ,NOUTDS,TZCODE)
      LAST=NDAYS(MONTH)
      IF ((MONTH.EQ.2).AND.(((IYEAR/4)*4).EQ.IYEAR)) LAST=LAST+1
      IF (IPRINT.EQ.1) GO TO 101
C
C     CHECK IF DETAILED OUTPUT NEEDED FOR THIS MONTH.
      ICKMO=PL(IPRINT)
      MOPR=PL(ICKMO)
      IYPR=PL(ICKMO+1)
      IF ((MONTH.EQ.MOPR).AND.(IYEAR.EQ.IYPR)) GO TO 102
      IPRINT=0
      GO TO 115
  102 IF (ICKMO.LT.(IPRINT+13)) ICKMO=ICKMO+2
      PL(IPRINT)=ICKMO+0.01
      IPRINT=1
  101 IOUT=IPR
      IF (IBUG.EQ.1) IOUT=IODBUG
      IF (IBUG.EQ.0) WRITE (IOUT,903)
  903 FORMAT (1H1)
      WRITE (IOUT,902) (PL(I),I=3,7),MONTH,IYEAR,TZCODE
  902 FORMAT (1H0,44HDETAILED SOIL-MOISTURE ACCOUNTING OUTPUT FOR,
     11X,5A4,5X,I2,1H/,I4,3X,10HTIME ZONE=,A4,10X,13HUNITS ARE MM.)
ckwz.4/27/05.r26-28.add frost index header
      if (IFRZE .LE. 0) then  !no frost index
	    WRITE (IOUT,904)
	  else   !yes frost index or FGIX
	    WRITE (IOUT,905)
	  endif
  904 FORMAT (1H0,3HDAY,1X,2HHR,2X,5HUZTWC,2X,5HUZFWC,2X,5HLZTWC,
     12X,5HLZFSC,2X,5HLZFPC,2X,5HADIMC,3X,4HPERC,4X,3HIMP,4X,3HDIR,4X,
     23HSUR,4X,3HINT,4X,3HSUP,4X,3HPRI,2X,6HTOT-RO,2X,6HET-DMD,1X,
     36HACT-ET,2X,9HRAIN+MELT)
  905 FORMAT (1H0,3HDAY,1X,2HHR,2X,5HUZTWC,2X,5HUZFWC,2X,5HLZTWC,
     12X,5HLZFSC,2X,5HLZFPC,2X,5HADIMC,5x,4HFGIX,3X,4HPERC,4X,3HIMP,
     24X,3HDIR,4X,3HSUR,4X,3HINT,4X,3HSUP,4X,3HPRI,2X,6HTOT-RO,2X,
     36HET-DMD,1X,6HACT-ET,2X,9HRAIN+MELT)
C.......................................
C     PARAMETER VALUES
  115 PXADJ=PL(IPLPM)
      PEADJ=PL(IPLPM+1)
      EFC=PL(IPLPM+19)
      CALL FPMCO1(PL,CL,IPLPM,IFRZE)
C
C     PASS PARAMETER VALUES TO GRAPHICS INTERFACE IF REQUESTED.
      IF (IOUTYP.EQ.0) GO TO 119
      IF (IDA.NE.IDARUN) GO TO 119
      CALL ICPI1(OPNAME,IDT,UZTWM,UZFWM,LZTWM,LZFSM,LZFPM,UZK,
     1  LZSK,LZPK,ZPERC,REXP,PCTIM,ADIMP,RIVA,PFREE,SIDE,PXADJ,
     2  PEADJ,EFC,IET,PL(IPLET),IFRZE,MAINUM)
C.........................................
C
C     SET FROST INDEX TO ZERO IF NOFRZE=1
  119 IF ((IFRZE.GT.0).AND.(NOFRZE.EQ.1)) FGCO(1)=0.0
C
C     STORE INITIAL CARRYOVER
      UZTWC1=UZTWC
      UZFWC1=UZFWC
      LZTWC1=LZTWC
      LZFSC1=LZFSC
      LZFPC1=LZFPC
      ADIMC1=ADIMC
C
C     CHECK FOR CHANGES TO CARRYOVER.
      BALADJ=0.0
      NM=0
      J=0
      L=IHR-IDT
      IF(MAINUM.NE.1) GO TO 160
      IF(NSCV.EQ.0) GO TO 160
      JH=(IDA-1)*24+L
      DO 165 I=1,NSCV
      IF(JH.NE.JHSAC(I)) GO TO 165
      J=I
      IF (BFMULT(J).GE.0.0) BFMULT(J)=-999.
      NM=1
      GO TO 160
  165 CONTINUE
  160 CALL FCKCO1(IDA,L,NOUTZ,NOUTDS,J,IFRZE,BALADJ,IBUG,IPRINT,IOUT)
c
cew store the CO actually used to start the model after mods if any
cew   for use in the SACCO interface
cew  Save carryover in slot with named model or in first empty slot
      write(c_opername,163) (opname(jj),jj=1,2)
      do 161 ii=1,10
       if(opernames(ii) .eq. "" .or. opernames(ii) .eq. c_opername)then
           UZTWC_1(ii) = UZTWC
           UZFWC_1(ii) = UZFWC
           LZTWC_1(ii) = LZTWC
           LZFSC_1(ii) = LZFSC
           LZFPC_1(ii) = LZFPC
           ADIMC_1(ii) = ADIMC
           fgco_1(ii)  = fgco(1)
           opernames(ii) = c_opername
           goto 162
       endif
        
 161  continue
 162  continue
 163  format(2a4)    
C
C     INITIALIZE SUMS
      SROT=0.0
      SIMPVT=0.0
      SRODT=0.0
      SROST=0.0
      SINTFT=0.0
      SGWFP=0.0
      SGWFS=0.0
      SRECHT=0.0
      SETT=0.0
      SPRT=0.0
      SPET=0.0
      SE1=0.0
      SE3=0.0
      SE4=0.0
      SE5=0.0
      SRO=0.0
      SRECH=0.0
      SET=0.0
      SPR=0.0
C
C     INITIAL ET-DEMAND OR PE-ADJUSTMENT
C     GET MONTH AND DAY NUMBER FOR INTERNAL TIME
      CALL MDYH1(IDA,IHR,MOET,IDET,IYET,I,100,0,V)
C     DETERMINE NUMBER OF DAYS IN MONTH FOR INCREMENTING.
      ND=NDAYS(MOET)
      IF ((MOET.EQ.2).AND.(((IYET/4)*4).EQ.IYET)) ND=ND+1
      IF (IDET.LT.16) GO TO 117
      EI=PL(IPLET+11+MOET)
      V=IDET-16
      ET=PL(IPLET+MOET-1)+V*EI
      GO TO 118
  117 J=MOET-1
      IF (J.EQ.0) J=12
      EI=PL(IPLET+11+J)
      V=16-IDET
      ET=PL(IPLET+MOET-1)-V*EI
C
C     INITIAL TIMING VALUES AND DATA OFFSET IN DAYS.
  118 KDA=IDA
      KHR=IHR
      KOFF=KDA-IDADAT
      IF (MAINUM.NE.1) GO TO 310
      IF (IFFG.EQ.0) GO TO 310
C     CALCULATE THE COMPUTATIONAL PERIOD AT OR JUST BEFORE LSTCMPDY
      KDAFFG=LDACPD
      KHRFFG=(LHRCPD/IDT)*IDT
      IF (KHRFFG.GT.0) GO TO 310
      KDAFFG=KDAFFG-1
      KHRFFG=24
  310 DT=IDT/24.0
C     DT IS THE LENGTH OF EACH TIME INTERVAL IN DAYS.
      IC=1
C     IC IS A SAVE CARRYOVER COUNTER
      GO TO 200
C.......................................
C     BEGINNING OF DAY AND HOUR LOOP.
C.......................................
  205 IF (KHR.NE.IDT) GO TO 210
      ET=ET+EI
      IF (IDET.EQ.16) EI=PL(IPLET+11+MOET)
  200 IF (IET.GT.0) GO TO 201
C     NO PE INPUT - GET ET DEMAND FROM SEASONAL CURVE.
      EPUADJ=ET
      GO TO 202
C     DAILY PE TIME SERIES AVAIABLE
  201 IF(KDA.NE.LDA) GO TO 203
      IF(LHR.EQ.24) GO TO 203
      EPUADJ=PPE
      GO TO 202
  203 EPUADJ=PE(KOFF+1)
      IF (EPUADJ.LT.0.00001) EPUADJ=0.0
      EPUADJ=EPUADJ*ET
  202 EP=EPUADJ*PEADJ
      SPET=SPET+EP
      ETD=EP
C
C     OBTAIN DATA FOR TIME INTERVAL
  210 IF (ISC.EQ.0) GO TO 215
      IF(KDA.NE.LDA) GO TO 211
      IF(KHR.LE.LSCD) GO TO 211
      AESC=PSC
      GO TO 212
  211 L=KOFF*NSC+(KHR-1)/ITSC+1
      AESC=COVER(L)
C     ADJUST EP FOR EFFECT OF SNOW COVER.
  212 ETD=EFC*EP+(1.0-EFC)*(1.0-AESC)*EP
  215 IF (IFRZE.EQ.0) GO TO 220
      IF(KDA.NE.LDA) GO TO 216
      IF(KHR.LE.LTAD) GO TO 216
      PDTA=PTA
      GO TO 217
  216 L=KOFF*NTA+(KHR-1)/ITTA+1
      PDTA=TA(L)
  217 IF (LWE.EQ.0) GO TO 220
      IF(KDA.NE.LDA) GO TO 218
      IF(KHR.LE.LWED) GO TO 218
      PDWE=PWE
      GO TO 220
  218 L=KOFF*NWE+(KHR-1)/ITWE+1
      PDWE=WE(L)
C
C     PRECIPITATION OR RAIN+MELT.
  220 KINT=KHR/IDT
      J=KOFF*(24/IDT)+KINT
      PXV=PX(J)*PXADJ*PXC
C     PXV IS THE PRECIP. VALUE FOR THE TIME INTERVAL.
      SPRT=SPRT+PXV
C.......................................
C     UPDATE PREVIOUS DATA VALUES
      IF((IET.GT.0).AND.(KHR.EQ.24)) PPE=EPUADJ
      IF (ISC.EQ.0) GO TO 221
      IF (MOD(KHR,ITSC).EQ.0) PSC=AESC
  221 IF(IFRZE.EQ.0) GO TO 225
      IF (NOFRZE.EQ.1) PDTA=0.0
      IF(MOD(KHR,ITTA).EQ.0) PTA=PDTA
      IF (LWE.EQ.0) GO TO 225
      IF (MOD(KHR,ITWE).EQ.0) PWE=PDWE
C.......................................
C     PERFORM SOIL-MOISTURE ACCOUNTING COMPUTATIONS.
  225 CALL FLAND1(KINT,DT,PXV,ETD,EPDIST,TCI,IPRINT,IDAY,IHOUR,IOUT,
     1   IFRZE,PDTA,LWE,PDWE,ISC,AESC,IBUG,MOET,IYET,KDA,IOUTYP,
     2   OPNAME)
C.......................................
C     SAVE OUTPUT VARIABLES.
C
C     RUNOFF -- CHANNEL INFLOW
      RO(J)=TCI
C
C     CHECK FOR CARRYOVER CHANGES.
      IF(MAINUM.NE.1) GO TO 230
      IF (NM.EQ.NSCV) GO TO 230
      JH=JH+IDT
      DO 231 I=1,NSCV
      IF(JH.NE.JHSAC(I)) GO TO 231
      J=I
      NM=NM+1
      GO TO 235
  231 CONTINUE
      GO TO 230
  235 CALL FCKCO1(KDA,KHR,NOUTZ,NOUTDS,J,IFRZE,BALADJ,IBUG,IPRINT,IOUT)
C
C     RUNOFF COMPONENTS
  230 IF(IROC.EQ.0) GO TO 134
      IF((KHR/ITROC)*ITROC.NE.KHR) GO TO 134
      L=(KOFF*NRC+(KHR-1)/ITROC)*7
      DO 136 I=1,7
      ROC(L+I)=RSUM(I)
  136 RSUM(I)=0.0
C
C     SOIL MOISTURE STORAGES
  134 IF(ISM.EQ.0) GO TO 135
      IF((KHR/ITSM)*ITSM.NE.KHR) GO TO 135
      L=(KOFF*NSM+(KHR-1)/ITSM)*5
      SM(L+1)=UZTWM-UZTWC
      SM(L+2)=UZFWC
      SM(L+3)=LZTWM-LZTWC
      SM(L+4)=LZFSC
      SM(L+5)=LZFPC
  135 IF (IFRZE.EQ.0) GO TO 125
      IF (LFI.EQ.0) GO TO 125
C
C     FROST INDEX
      IF ((KHR/ITFI)*ITFI.NE.KHR) GO TO 125
      L=KOFF*NFI+KHR/ITFI
      FI(L)=FGCO(1)
C.......................................
C     STORE FFG CARRYOVER IF REQUESTED
  125 IF (IFILLC.EQ.0) GO TO 126
      IF (MAINUM.NE.1) GO TO 126
      IF (IFFG.EQ.0) GO TO 126
      IF ((KDA.EQ.KDAFFG).AND.(KHR.EQ.KHRFFG)) GO TO 320
      GO TO 126
  320 CALL FSTCO1(CL,IFRZE)
C.......................................
C     CHECK TO SEE IF CARRYOVER SHOULD BE SAVED.
  126 IF (IFILLC.EQ.0) GO TO 130
      IF (NCSTOR.EQ.0) GO TO 130
      IF (IC.GT.NCSTOR) GO TO 130
      IF ((KDA.EQ.ICDAY(IC)).AND.(KHR.EQ.ICHOUR(IC))) GO TO 120
      GO TO 130
C
C     CARRYOVER SHOULD BE SAVED.
  120 CALL FSTCO1(CO,IFRZE)
      CALL FCWTCO(KDA,KHR,CO,NC)
      IC=IC+1
C.......................................
  130 IF(MAINUM.GT.2) GO TO 150
C     CHECK FOR END OF THE OBSERVED DATA PERIOD.
      IF((KDA.EQ.LDACPD).AND.(KHR.EQ.(LHRCPD/IDT)*IDT)) GO TO 140
      GO TO 150
C
C     END OF OBSERVED DATA PERIOD.
  140 PXC=1.0
      IF(ISUM.EQ.0) GO TO 150
C     STORE SUMS FOR OBSERVED PERIOD.
      PL(ISUM)=SPRT
      PL(ISUM+1)=SROT
      PL(ISUM+2)=SROST
      PL(ISUM+3)=SRODT+SIMPVT
      PL(ISUM+4)=SINTFT
      PL(ISUM+5)=SGWFS+SGWFP
      PL(ISUM+6)=SPET
      PL(ISUM+7)=SETT
      ISUM=ISUM+8
C     SAVE TOTALS AND REINITIALIZE SUMS.
      SRO=SROT
      SROT=0.0
      SRECH=SRECHT
      SRECHT=0.0
      SET=SETT
      SETT=0.0
      SPR=SPRT
      SPRT=0.0
      SROST=0.0
      SRODT=0.0
      SIMPVT=0.0
      SINTFT=0.0
      SGWFS=0.0
      SGWFP=0.0
      SPET=0.0
C.......................................
C     CHECK FOR THE END OF THE EXECUTION PERIOD.
  150 IF((KDA.EQ.LDA).AND.(KHR.EQ.LHR)) GO TO 170
C.......................................
C     INCREMENT TIME VALUES.
      IF (IPRINT.EQ.0) GO TO 155
      IHOUR=IHOUR+IDT
      IF (IHOUR.LE.24) GO TO 155
      IHOUR=IHOUR-24
      IDAY=IDAY+1
      IF (IDAY.LE.LAST) GO TO 155
      IDAY=1
      MONTH=MONTH+1
      IF (MONTH.LE.12) GO TO 154
      MONTH=1
      IYEAR=IYEAR+1
  154 LAST=NDAYS(MONTH)
      IF ((MONTH.EQ.2).AND.(((IYEAR/4)*4).EQ.IYEAR)) LAST=LAST+1
  155 KHR=KHR+IDT
      IF (KHR.LE.24) GO TO 205
      KHR=IDT
      KDA=KDA+1
       KOFF=KOFF+1
      IDET=IDET+1
      IF (IDET.LE.ND) GO TO 205
      IDET=1
      MOET=MOET+1
      IF (MOET.LE.12) GO TO 156
      MOET=1
      IYET=IYET+1
  156 ND=NDAYS(MOET)
      IF ((MOET.EQ.2).AND.(((IYET/4)*4).EQ.IYET)) ND=ND+1
      GO TO 205
C.......................................
C     END OF DAY AND HOUR LOOP.
C.......................................
C     COMPUTE WATER BALANCE FOR EXECUTION PERIOD.
  170 SRO=SRO+SROT
      SRECH=SRECH+SRECHT
      SET=SET+SETT
      SPR=SPR+SPRT
      BAL=(UZTWC+UZFWC+LZTWC+LZFPC+LZFSC-UZTWC1-UZFWC1-LZTWC1-LZFPC1-LZF
     1SC1)*PAREA+(ADIMC-ADIMC1)*ADIMP+SRO+SRECH+SET-SPR-BALADJ
      IF (ABS(BAL).LE.1.0) GO TO 175
      WRITE (IPR,906) BAL
  906 FORMAT (1H0,10X,48H**WARNING** WATER BALANCE RESIDUAL EXCEEDS 1 MM
     1.,3X,9HRESIDUAL=,F7.2)
      CALL WARN
C
C     STORE SUMS IF REQUESTED.
  175 IF (ISUM.EQ.0) GO TO 180
      IF (MAINUM.LT.3) GO TO 176
C
C     STORE SUMS FOR CALIBRATION RUN.
      PL(ISUM)=SPRT
      PL(ISUM+1)=SROT
      PL(ISUM+2)=SRECHT
      PL(ISUM+3)=SETT
      PL(ISUM+4)=BAL
      PL(ISUM+5)=SIMPVT
      PL(ISUM+6)=SRODT
      PL(ISUM+7)=SROST
      PL(ISUM+8)=SINTFT
      PL(ISUM+9)=SGWFS
      PL(ISUM+10)=SGWFP
      PL(ISUM+11)=SPET
      PL(ISUM+12)=SE1
      PL(ISUM+13)=SE3
      PL(ISUM+14)=SE5
      PL(ISUM+15)=SE4
      GO TO 180
C
C     STORE SUMS FOR FUTURE PERIOD OR OBSERVED PERIOD ONLY RUN.
  176 PL(ISUM)=SPRT
      PL(ISUM+1)=SROT
      PL(ISUM+2)=SROST
      PL(ISUM+3)=SRODT+SIMPVT
      PL(ISUM+4)=SINTFT
      PL(ISUM+5)=SGWFS+SGWFP
      PL(ISUM+6)=SPET
      PL(ISUM+7)=SETT
C
C     STORE CARRYOVER FOR END OF PERIOD IF REQUESTED.
  180 IF (IFILLC.EQ.0) GO TO 190
      IF (MAINUM.NE.1) GO TO 330
      IF (IFFG.NE.0) GO TO 190
  330 CALL FSTCO1(CL,IFRZE)
C.......................................
C     DEBUG OUTPUT
  190 IF (IBUG.EQ.0) GO TO 199
      WRITE (IODBUG,910) LP,NC
      WRITE (IODBUG,901) (PL(I),I=1,LP)
      WRITE (IODBUG,901) (CL(I),I=1,NC)
      IF (ISUM.EQ.0) GO TO 199
      WRITE (IODBUG,912)
  912 FORMAT (1H0,48HSUMS OF WATER BALANCE, RUNOFF, AND ET COMPONENTS)
      J=ISUM-9
      WRITE (IODBUG,901) (PL(J+I),I=1,16)
C.......................................
  199 RETURN
      END
