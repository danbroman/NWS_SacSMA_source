C MEMBER FHSOLV
C  (from old member FCFLOOPR)
C
C
C  DESC -- COMPUTE UNKNOWN STAGE GIVEN DISCHARGE
C @PROCESS LVL(77)
C
C......................................................................
C
      SUBROUTINE FHSOLV (QF,QP,HP,EPH,SLE,CONR,DTS,DH,G,HF,IBUG)
C
C......................................................................
C
C   THIS SUBROUTINE USES NEWTON ITERATION TO SOLVE FOR THE
C   UNKNOWN STAGE WHEN THE DISCHARGE HYDROGRAPH IS GIVEN.
C  ARGUMENT LIST:
C      QF     - THE CURRENT DISCHARGE VALUE
C      QP     - THE PREVIOUS TIME STEP DISCHARGE VALUE
C      HP     - THE PREVIOUS TIME WATER ELEV.
C      EPH    - ITERATIVE CONVERGENCE CRITERION
C      SLOPE  - CHANNEL BOTTOM SLOPE
C      CONR   - RATING COEFFICIENT
C      DTS    - DELTA TIME STEP (SECONDS)
C      DH     - PREVIOUS CHANGE IN STAGE
C      G      - GRAVITY ACCELERATION CONSTANT
C      QF     - OUTPUT DISCHARGE DETERMINED BY SUBROUTINE
C
C.......................................................................
C
C  SUBROUTINE ORIGINALLY WRITTEN BY --
C      DANNY FREAD -- HRL --731101
C  CONVERTED FOR NWSRFS BY --
C      JONATHAN WETMORE - HRL -801031
C
C......................................................................
C
!CP   INCLUDE 'gionum'
!CP   INCLUDE 'common/fdbug'
!CP   INCLUDE 'common/where'
      INCLUDE 'flogm'
      INCLUDE 'fratng'
      INCLUDE 'facxsc'
C
       DIMENSION SUBNAM(2),OLDSUB(2)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_rc/RCS/fhsolv.f,v $
     . $',                                                             '
     .$Id: fhsolv.f,v 1.2 1998/07/02 17:10:32 page Exp $
     . $' /
C    ===================================================================
C
       DATA LOOP,SUBNAM/4HLOOP,4HHSOL,4HVE  /
C  SET /WHERE/ INFO
C
!CP   DO 500 I=1,2
!CP   OLDSUB(I) = OPNAME(I)
!CP   500 OPNAME(I) = SUBNAM(I)
!CP   IOLDOP = IOPNUM
!CP   IOPNUM = 0
C
      IBUG = 0
      IF (IFBUG(LOOP).EQ.1) IBUG = 1
C
!CP   IF (ITRACE.GE.3) WRITE(IODBUG,601)
      IF ( FEWSDEBUG.GE.5 ) THEN
         WRITE(MESSAGESTRING, 601)
	 call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
  601    FORMAT(1H ,21H *** ENTER FHSOLV ***)
      END IF
C
C  SET ARRAY INDEX
      LH1=LOCH
      LHN=LH1+NRCPTS-1
      LXE1=LXELEV
      LXEN=LXE1+NCROSS-1
      LXT1=LXTOPW
      RCMXH=XRC(LHN)
      RCMXEL=RCMXH+GZERO
C
C  COMPUTES CONSTANTS FOR EQ(15)
      CALL FSECT(HP,A,B,BO,R,DB,DBO,DR,FK)
      FJ2=SLOPE+CONR+QP/G/A/DTS
      FKP=FK
       BP=B
C  COMPUTE STARTING VALUE FOR ITERATIVE SOLUTION OF EQ(15)
      HK=HP+DH/2.
C  SOLVE EQ(15) BY NEWTON ITERATION
      FOLD=1.0E+10
      DO 30 K=1,20
      CALL FSECT(HK,A,B,BO,R,DB,DBO,DR,FK)
      CALL FRICT(HK,CMN,DCMN)
      IF(FLOODN.GT.1.0) GO TO 510
      IF(HP.LE.RCMXEL .OR. FLOODN.LE.0.0) GO TO 510
      CALL FSECT(RCMXEL,XA,BTOP,XBO,XR,XDB,XDBO,XDR,XFK)
      CALL FRICT (RCMXEL,CMN,XDCMN)
      BFLD=B-BTOP
      CMM=(CMN*CMN*BTOP+FLOODN*FLOODN*BFLD)/B
      CMN=SQRT(CMM)
  510 DH=HK-HP
      D=R**(3./2.)
      DKDH=0.0
      DBDH=0.0
      IF(ABS(DH).GT.0.01) THEN
        DKDH=(FK-FKP)/DH
        DBDH=(B-BP)/DH
      END IF
      FJ3=1./QF/FK/DTS
      FJ4=QF/G/DTS
      FJ5=-QF/G/DTS
      FJ6=-CONR*QF*QF/G
!CP   IF(IBUG.GE.1) WRITE(IODBUG,602) FJ2,FJ3,FJ4,FJ5,FJ6
      IF ( FEWSDEBUG.GE.5 ) THEN
         WRITE(MESSAGESTRING, 602) FJ2,FJ3,FJ4,FJ5,FJ6
	 call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
      END IF
 602  FORMAT(1H0,2X,5HF2 = ,E12.5,3X,5HF3 = ,E12.5,3X,5HF4 = ,E12.5,
     13X,5HF5 = ,E12.5,3X,5HF6 = ,E12.5)
      FL2=1.0*A*R/CMN
      LOCFR=EMPTY(1)
      QMIN=XRC(LOCFR+5)
      SMIN=SLOPE
      IF(QMIN.LE.FL2) SMIN=(QMIN/FL2)**2
      IF(SMIN.GE.SLOPE) SMIN=SLOPE
      FJ0=FJ2+(FJ3*A+FJ4*(B+BO-B/FK)/A/A)*DH+FJ5/A+FJ6*B/A/A/A
      IF(FJ0.LE.SMIN) THEN
        FJ0=SLE
        FJ1=0.0
        GO TO 15
      END IF
      TERM1=FJ3*A
      TERM2=FJ4*(B+BO-B/FK)/A/A
      TERM31=FJ4/A/A*((DB+DBO-DB/FK)
     2-2.*B/A*(B+BO-B/FK)+B/FK/FK*DKDH)
      TERM3=DH*(FJ3*B+TERM31-A*FJ3/FK*DKDH)
      TERM4=-FJ5*B/A/A
      TERM5=-FJ6*(DBDH-3.*B/D)/A/A/A
      FJ1=TERM1+TERM2+TERM3+TERM4+TERM5
!CP   IF(IBUG.GE.1)
!CP   & WRITE(IODBUG,604) TERM1,TERM2,TERM3,TERM4,TERM5,CMN
      IF ( FEWSDEBUG.GE.5 ) THEN
         WRITE(MESSAGESTRING, 604) TERM1,TERM2,TERM3,TERM4,TERM5,CMN
	 call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
      END IF 
 604  FORMAT(1H0,2X,'TERM1=',E12.5,3X,'TERM2=',E12.5,3X,'TERM3=',E12.5,
     & 3X,'TERM4=',E12.5,3X,'TERM5=',E12.5,3X,'CMN=',F7.5)
   15 DF=-1.0*(SQRT(FJ0)*(A/CMN*DR+R*B/CMN-A*R*DCMN/CMN/CMN)+
     & 0.5*A*R/CMN*FJ1
     1/SQRT(FJ0))
      F=QF-FL2*SQRT(FJ0)
!CP   IF(IBUG.GE.1)
!CP   & WRITE(IODBUG,603) FJ0,FJ1,FL2,HK,F,DF
      IF ( FEWSDEBUG.GE.5 ) THEN
         WRITE(MESSAGESTRING, 603) FJ0,FJ1,FL2,HK,F,DF 
         call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
      END IF
 603  FORMAT(1H0,2X,5HF0 = ,E12.5,3X,5HF1 = ,E12.5,3X,5HFL2= ,E12.5,
     13X,5HHK = ,F10.2,3X,5HF  = ,F10.1,3X,5HDF = ,F10.1)
      IF(ABS(F).GT.ABS(FOLD)) GO TO 35
      FOLD=F
      HKOLD=HK
      FDF=F/DF
      DHK=FDF
      DHKMX=5.0
      IF(ABS(FDF).GE.DHKMX) DHK=SIGN(DHKMX,FDF)
      HKK=HK-DHK
      ADH=ABS(HKK-HK)
      IF (ADH.LE.EPH) GO TO 40
   30 HK=HKK
C  SOLVE EQ(15) BY BISECTION METHOD
   35 CONTINUE
!CP   IF(IBUG.GE.1) WRITE(IODBUG,310) HK,F,HKOLD,FOLD
      IF ( FEWSDEBUG.GE.5 ) THEN
         WRITE(MESSAGESTRING, 310) HK,F,HKOLD,FOLD
	 call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
      END IF
 310  FORMAT(/2X,'NONCONVERGENCE OCCURED IN NEWTON-RALPHSON SOLUTION,'
     & /5X,'BISECTION METHOD IS USED, NEW H,F= ',2F10.2,
     & 5X,'OLD H,F= ',2F10.2)
      SNF=F*FOLD
      IF(SNF.GT.0.) GO TO 350
      YMX=HKOLD
      YMN=HK
      IF(HK.GT.HKOLD) THEN
        YMX=HK
        YMN=HKOLD
      END IF
      HKO=1.0+10
      HK=0.5*(YMX+YMN)
      DO 300 K=1,100
      CALL FSECT(HK,A,B,BO,R,DB,DBO,DR,FK)
      CALL FRICT(HK,CMN,DCMN)
      IF(FLOODN.GT.1.0) GO TO 315
      IF(HP.LE.RCMXEL .OR. FLOODN.LE.0.0) GO TO 315
      CALL FSECT(RCMXEL,XA,BTOP,XBO,XR,XDB,XDBO,XDR,XFK)
      CALL FRICT (RCMXEL,CMN,XDCMN)
      BFLD=B-BTOP
      CMM=(CMN*CMN*BTOP+FLOODN*FLOODN*BFLD)/B
      CMN=SQRT(CMM)
  315 DH=HK-HP
      FJ3=1./QF/FK/DTS
      FJ4=QF/G/DTS
      FJ5=-QF/G/DTS
      FJ6=-CONR*QF*QF/G
!CP   IF(IBUG.GE.1) WRITE(IODBUG,602) FJ2,FJ3,FJ4,FJ5,FJ6
      IF ( FEWSDEBUG.GE.5 ) THEN
         WRITE(MESSAGESTRING, 602) FJ2,FJ3,FJ4,FJ5,FJ6
	 call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
      END IF
      FL2=1.0*A*R/CMN
      FJ0=FJ2+(FJ3*A+FJ4*(B+BO-B/FK)/A/A)*DH+FJ5/A+FJ6*B/A/A/A
      IF(FJ0.LE.SMIN) FJ0=SLE
      F=QF-FL2*SQRT(FJ0)
!CP   IF(IBUG.GE.1) WRITE(IODBUG,605) FJ0,FL2,HK,F,CMN
      IF ( FEWSDEBUG.GE.5 ) THEN
         WRITE(MESSAGESTRING, 605) FJ0,FL2,HK,F,CMN
	 call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
      END IF
 605  FORMAT(1H0,2X,5HF0 = ,E12.5,3X,5HFL2= ,E12.5,
     13X,5HHK = ,F10.2,3X,5HF  = ,F10.1,'CMN= ',F7.5)
      HKK=HK
      IF (ABS(HK-HKO).LT.EPH) GO TO 350
      HKO=HK
      IF (F.LT.0.0) YMX=HK
      IF (F.GT.0.0) YMN=HK
      HK=0.5*(YMX+YMN)
  300 CONTINUE
  350 CONTINUE
      IF (ABS(F).LE.1.0) GO TO 40
!CP   IF(IBUG.GE.1) WRITE(IODBUG,360) QF
      IF ( FEWSDEBUG.GE.5 ) THEN
         WRITE(MESSAGESTRING, 360) QF
	 call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
      END IF
 360  FORMAT(/2X,'BOTH NEWTON-RALPHSON AND BISECTION METHOD FAILED,',
     & /5X,'NORMAL DEPTH IS USED,  FOR FLOW Q=',F10.0)
      ICS=2
      NEEDS=NEEDEX
      LOWES=LOWEXT
      IUPES=IUPEXT
      NWS=NW
      NRANS=NRANGE
      MISIS=MISING
      CARRS=CARRYO
      CALL FHQS1(HKSTG,QF,ICS,IBUG,NEEDEX,LOWEXT,IUPEXT,
     $      NW,NRANGE,MISING,CARRYO)
      HKK=HKSTG+GZERO
      NEEDEX=NEEDS
      LOWEXT=LOWES
      IUPEXT=IUPES
      NW=NWS
      NRANGE=NRANS
      MISING=MISIS
      CARRYO=CARRS
   40 HF=HKK
      SLE=FJ0
!CP   IF (ITRACE.GE.2) WRITE(IODBUG,609)
      IF ( FEWSDEBUG.GE.5 ) THEN
         WRITE(MESSAGESTRING, 609)
         call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
  609    FORMAT(1H ,21H *** EXIT  FHSOLV ***)
      END IF
!CP   OPNAME(1) = OLDSUB(1)
!CP   OPNAME(2) = OLDSUB(2)
!CP   IOPNUM = IOLDOP
C
      RETURN
      END
